#!/bin/bash --login
#SBATCH -J AmyHouseman_extractgenes
#SBATCH -o %x.stdout.%J.%N
#SBATCH -e %x.stderr.%J.%N
#SBATCH --ntasks=1
#SBATCH --ntasks-per-node=1
#SBATCH -p htc
#SBATCH --account=scw1581
#SBATCH --mail-type=ALL          # Mail events (NONE, BEGIN, END, FAIL, ALL)
#SBATCH --mail-user=HousemanA@cardiff.ac.uk     # Where to send mail
#SBATCH --array=1
#SBATCH --qos=maxjobs500

module load parallel
EXOME_IDs_FILE=/scratch/c.c21087028/Polyposis_Exome_Analysis_ALLDATASET_VCFs_BESTCOVERAGE/bcftools/input/alldataset_bestcov_IDS
ORIGINAL_ID_TO_POSITION_FILE=/scratch/c.c21087028/Polyposis_Exome_Analysis_ALLDATASET_VCFs_BESTCOVERAGE/Testing_copyingcolumn/{}PE_output_GCA_000001405.15_GRCh38_no_alt_analysis_set_norefcalls_annotatedVEP_bcftoolssplitvcf_withchromheader_nofirstcolumn_AMYsextractedpolyposisgenes.vcf
OUTPUT_ID_TO_POSITION_FILE=/scratch/c.c21087028/Polyposis_Exome_Analysis_ALLDATASET_VCFs_BESTCOVERAGE/Testing_copyingcolumn/OUTPUT_ID_TO_POSITION/{}output_ID_to_position.vcf
EXOMEIDADDED_OUTPUT=/scratch/c.c21087028/Polyposis_Exome_Analysis_ALLDATASET_VCFs_BESTCOVERAGE/Testing_copyingcolumn/EXOMEIDADDED/{}exomeID_added.vcf
EXOMEID={}
# Set bash error trapping to exit on first error.
set -eu

cd /scratch/c.c21087028/

### sed -n "${SLURM_ARRAY_TASK_ID}p" $EXOME_IDs_FILE = go into the alldataset_bestcov_IDS file and pull out the line (sample ID) relating to the array number and place into the {}.
### "awk '\$2=\$3' $ORIGINAL_ID_TO_POSITION_FILE >> $OUTPUT_ID_TO_POSITION_FILE = copy the third column into the second column
### "awk '\$2=\$3' $ORIGINAL_ID_TO_POSITION_FILE >> $OUTPUT_ID_TO_POSITION_FILE && awk '{\$2="$EXOMEID"\$2}1' $OUTPUT_ID_TO_POSITION_FILE > $EXOMEIDADDED_OUTPUT" = add the sample ID {} onto all of the entries for the second column

sed -n "${SLURM_ARRAY_TASK_ID}p" $EXOME_IDs_FILE | parallel -j 1 "awk '\$2=\$3' $ORIGINAL_ID_TO_POSITION_FILE >> $OUTPUT_ID_TO_POSITION_FILE && awk '{\$2="$EXOMEID"\$2}1' $OUTPUT_ID_TO_POSITION_FILE > $EXOMEIDADDED_OUTPUT"

